<?xml version="1.0"?>
<!-- Params definitions can extend others to foster reuse. -->
<cfg extends="my_pkg/Std">
  <!-- Descriptions help users to understand parameters, both when entering
       parameters in launch files and for dynamically configuring nodes. -->
  <param name="rate" type="double" default="1.0" description="The rate"/>
  <!-- Parameters must have at least a name and a type. -->
  <param name="duration" type="double" default="1.0">
    <!-- Some attributes may also be given as child elements: -->
    <description>An elaborate description.</description>
  </param>
  <param name="have_tree" type="bool" default="false"/>
  
  <!-- The "dynamic" attribute specifies whether parameters can be changed at
       runtime. The "level" attribute is for compatibility with
       dynamic_reconfigure. -->
  <param name="factor" type="double" min="0.1" max="100" default="10"
         dynamic="true" level="4"/>
  
  <!-- Units help with documenting and entering values. -->
  <param name="abs_distance" type="int" unit="0.1mm" default="20"/>
  <param name="rel_distance" type="double" unit="%" default="70"/>
  <param name="linear_speed" type="double" unit="m/s" default="7.2"/>
  
  <!-- Choices limit the allowed values to specific ones. -->
  <param name="interpolation_mode" type="str" choices="linear quadratic"
         default="linear"/>
  
  <!-- Suggestions allow a UI to present a list of proposed values, but do not
       limit the allowed values. (Note: "Baud", including "kBaud" and "MBaud",
       could make sense to have.) -->
  <param name="baud_rate" type="int" suggestions="9600 19200 38400 115200"
         default="0"/>
  
  <!-- Patterns limit allowed values to the ones matching the given regular
       expression (probably not that useful, while quite hard to implement in
       e.g. C++). -->
  <param name="image_file_name" type="str" pattern=".*\.(png|jpeg)" default=""/>
  
  <!-- Other params files can be referenced as types. Arrays are also
       possible, just like in ROS message definitions. The "dynamic" attribute
       means whether items can be added or removed dynamically in this case. -->
  <param name="filters" type="my_pkg/Filter[]"/>
  
  <!-- Maps (dictionaries) are also supported. "any" is a variant type. (Note
       that the ROS parameters concept actually only allows strings as
       keys; however, lists are also possible somehow, so...) -->
  <param name="kvargs" type="any[str]"/>
  <param name="error_names" type="int->str"/><!-- hmm -->
  <param name="error_names" type="str[int]"/>
  
  <!-- An "ignored" attribute could be used to specify, but ignore other
       parameters that could also be defined, but aren't relevant. This
       implicates that checks are done that no other than the specified
       parameters are given. This would help finding errors like misspelled
       parameter names. -->
  <param name="other_lib" ignored="true"/>
</cfg>

